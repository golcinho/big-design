(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{"2pL5":function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/Select/SelectPage",function(){var e=n("WdXb");return{page:e.default||e}}])},WdXb:function(e,t,n){"use strict";n.r(t);var l=n("+Ls6"),o=n("ERkP"),a=n.n(o),i=n("GsAr"),c=n("lIm4"),p=n("nFRM"),r=function(){return a.a.createElement(p.a,null,a.a.createElement(p.a.Prop,{name:"error",types:"ReactChild"},"Displays a form error around the field."),a.a.createElement(p.a.Prop,{name:"label",types:"ReactChild"},"Adds a label to the field."),a.a.createElement(p.a.Prop,{name:"maxHeight",types:"number",defaults:"250"},"Sets a ",a.a.createElement(c.a,null,"max-height")," to the dropdown."),a.a.createElement(p.a.Prop,{name:"placement",types:["auto-start","auto","auto-end","top-start","top","top-end","right-start","right","right-end","bottom-end","bottom","bottom-start","left-end","left","left-start"],defaults:"bottom-start"},"Determines the location in which the dropdown will be placed."),a.a.createElement(p.a.Prop,{name:"required",types:"boolean"},"Sets the field as required."),a.a.createElement(p.a.Prop,{name:"disabled",types:"boolean"},"Disables the select component."),a.a.createElement(p.a.Prop,{name:"value",types:"string | string[] | number"},"Modifies the current selected value of the field."),a.a.createElement(p.a.Prop,{name:"onActionClick",types:"(string) => void"},"Callback called with the typed text of the field."),a.a.createElement(p.a.Prop,{name:"onItemChange",types:"(value) => void",required:!0},"Callback called with value of clicked item."))},u=function(){return a.a.createElement(p.a,null,a.a.createElement(p.a.Prop,{name:"value",types:"string | string[] | number"},"Value of the option"))};t.default=function(){return a.a.createElement(a.a.Fragment,null,a.a.createElement(l.H0,null,"Selects"),a.a.createElement(l.Text,null,"Select are typeable inputs with selectable dropdown items."," ",a.a.createElement(l.Link,{href:"https://design.bigcommerce.com/components/selects",target:"_blank"},"Selects Design Guidelines"),"."),a.a.createElement(i.a,null,'function Example() {\n  const [value, setValue] = React.useState(\'\');\n  const handleChange = val => setValue(val);\n\n  return (\n    <Form.Group>\n      <Select\n        label="Countries"\n        maxHeight={300}\n        onActionClick={inputText => inputText}\n        onItemChange={handleChange}\n        placeholder={\'Choose country\'}\n        placement={\'bottom-start\'}\n        value={value}\n        error={value ? undefined : \'You must choose a country\'}\n        required\n      >\n        <Select.Option value="us">United States</Select.Option>\n        <Select.Option value="mx">Mexico</Select.Option>\n        <Select.Option value="ca">Canada</Select.Option>\n        <Select.Option value="en">England</Select.Option>\n        <Select.Option value="fr">France</Select.Option>\n        <Select.Option value="gr">Germany</Select.Option>\n        <Select.Option value="ar">Argentina</Select.Option>\n        <Select.Option value="ch">Chile</Select.Option>\n        <Select.Option value="bo">Bolivia</Select.Option>\n        <Select.Option value="jp">Japan</Select.Option>\n        <Select.Option value="cn">China</Select.Option>\n        <Select.Option value="sk">South Korea</Select.Option>\n        <Select.Option value="au">Australia</Select.Option>\n        <Select.Option value="ug">Uganda</Select.Option>\n        <Select.Option value="ru" disabled>\n          Russia\n        </Select.Option>\n        <Select.Action>Action</Select.Action>\n      </Select>\n    </Form.Group>\n  );\n}'),a.a.createElement(l.H1,null,"API"),a.a.createElement(l.H2,null,"Select"),a.a.createElement(r,null),a.a.createElement(l.H2,null,"Select.Option"),a.a.createElement(u,null),a.a.createElement(l.H1,null,"Position"),a.a.createElement(l.Text,null,"Select can be anchored in different directions with the ",a.a.createElement(c.a,{primary:!0},"position")," property. It will automatically find a position if there's not enough space in the chosen direction."),a.a.createElement(i.a,null,'<Grid gridColumns="repeat(4, 1fr)">\n  <Select label="Select" placeholder="Choose from above" onItemChange={() => null} placement="top">\n    <Select.Option value={1}>Option</Select.Option>\n    <Select.Option value={2}>Option</Select.Option>\n    <Select.Option value={3}>Option</Select.Option>\n    <Select.Option value={4}>Option</Select.Option>\n  </Select>\n  <Select label="Select" placeholder="Choose from below" onItemChange={() => null} placement="bottom-start">\n    <Select.Option value={1}>Option</Select.Option>\n    <Select.Option value={2}>Option</Select.Option>\n    <Select.Option value={3}>Option</Select.Option>\n    <Select.Option value={4}>Option</Select.Option>\n  </Select>\n  <Select label="Select" placeholder="Choose from the right" onItemChange={() => null} placement="right-start">\n    <Select.Option value={1}>Option</Select.Option>\n    <Select.Option value={2}>Option</Select.Option>\n    <Select.Option value={3}>Option</Select.Option>\n    <Select.Option value={4}>Option</Select.Option>\n  </Select>\n  <Select label="Select" placeholder="Choose from the left" onItemChange={() => null} placement="left-end">\n    <Select.Option value={1}>Option</Select.Option>\n    <Select.Option value={2}>Option</Select.Option>\n    <Select.Option value={3}>Option</Select.Option>\n    <Select.Option value={4}>Option</Select.Option>\n  </Select>\n</Grid>'),a.a.createElement(l.H1,null,"Max Height"),a.a.createElement(l.Text,null,"Once the content is longer than the max-height, the Dropdown will be scrollable. It is possible to modify the dimension by passing a ",a.a.createElement(c.a,{primary:!0},"maxHeight")," property."),a.a.createElement(i.a,null,'<Grid gridColumns="repeat(3, 1fr)">\n  <Select label="Select" placeholder="Default" onItemChange={() => null}>\n    <Select.Option value={1}>Option</Select.Option>\n    <Select.Option value={2}>Option</Select.Option>\n    <Select.Option value={3}>Option</Select.Option>\n    <Select.Option value={4}>Option</Select.Option>\n    <Select.Option value={5}>Option</Select.Option>\n    <Select.Option value={6}>Option</Select.Option>\n    <Select.Option value={7}>Option</Select.Option>\n    <Select.Option value={8}>Option</Select.Option>\n  </Select>\n  <Select label="Select" placeholder="Smaller" onItemChange={() => null} maxHeight={150}>\n    <Select.Option value={1}>Option</Select.Option>\n    <Select.Option value={2}>Option</Select.Option>\n    <Select.Option value={3}>Option</Select.Option>\n    <Select.Option value={4}>Option</Select.Option>\n    <Select.Option value={5}>Option</Select.Option>\n    <Select.Option value={6}>Option</Select.Option>\n    <Select.Option value={7}>Option</Select.Option>\n    <Select.Option value={8}>Option</Select.Option>\n  </Select>\n  <Select label="Select" placeholder="Larger" onItemChange={() => null} maxHeight={350}>\n    <Select.Option value={1}>Option</Select.Option>\n    <Select.Option value={2}>Option</Select.Option>\n    <Select.Option value={3}>Option</Select.Option>\n    <Select.Option value={4}>Option</Select.Option>\n    <Select.Option value={5}>Option</Select.Option>\n    <Select.Option value={6}>Option</Select.Option>\n    <Select.Option value={7}>Option</Select.Option>\n    <Select.Option value={8}>Option</Select.Option>\n  </Select>\n</Grid>'),a.a.createElement(l.H1,null,"Disabled"),a.a.createElement(l.Text,null,"It is possible to disable the entire select component, similar to how you would disable a native HTML select element, by using the ",a.a.createElement(c.a,{primary:!0},"disabled")," property."),a.a.createElement(i.a,null,'<Select label="Select" placeholder="Default" onItemChange={() => null} disabled>\n  <Select.Option value={1}>Option</Select.Option>\n  <Select.Option value={2}>Option</Select.Option>\n</Select>'),a.a.createElement(l.H1,null,"Select.Action"),a.a.createElement(l.Text,null,"Select.Action allows you to add custom actions to the dropdown."),a.a.createElement(i.a,null,"<Select value={1} onItemChange={() => null} onActionClick={innerText => alert(innerText)}>\n  <Select.Option value={1}>Action Example</Select.Option>\n  <Select.Action>Action</Select.Action>\n</Select>"))}}},[["2pL5",1,0]]]);