(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{GMks:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/Checkbox/CheckboxPage",function(){var e=t("o6rH");return{page:e.default||e}}])},o6rH:function(e,n,t){"use strict";t.r(n);var a=t("+Ls6"),c=t("ERkP"),l=t.n(c),r=t("lIm4"),o=t("GsAr"),u=t("nFRM"),h=function(){return l.a.createElement(u.a,null,l.a.createElement(u.a.Prop,{name:"label",types:"ReactChild",required:!0},"Label to display next to a ",l.a.createElement(r.a,null,"Checkbox")," component."))};n.default=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(a.H0,null,"Checkbox"),l.a.createElement(a.Text,null,"Checkboxes are a stylized ",l.a.createElement(r.a,null,'input[type="checkbox"]')," with controllable checked/unchecked states."," ",l.a.createElement(a.Link,{href:"https://design.bigcommerce.com/components/checkboxes",target:"_blank"},"Checkbox Design Guidelines"),"."),l.a.createElement(o.a,null,"function Example() {\n  const [checked, setChecked] = React.useState(false);\n  const handleChange = () => setChecked(!checked);\n\n  return (\n    <Form.Group>\n      <Checkbox label={checked ? 'Checked' : 'Unchecked'} checked={checked} onChange={handleChange} />\n    </Form.Group>\n  );\n}"),l.a.createElement(a.H1,null,"API"),l.a.createElement(a.H2,null,"Checkbox"),l.a.createElement(a.Text,null,"Supports all native ",l.a.createElement(r.a,null,"<input />")," element attributes."),l.a.createElement(h,null))}}},[["GMks",1,0]]]);