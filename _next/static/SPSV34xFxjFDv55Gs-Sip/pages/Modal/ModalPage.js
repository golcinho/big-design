(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{KL3r:function(e,n,t){"use strict";t.r(n);var a=t("+Ls6"),o=t("ERkP"),l=t.n(o),s=t("GsAr"),i=t("lIm4"),r=t("nFRM"),c=function(){return l.a.createElement(r.a,null,l.a.createElement(r.a.Prop,{name:"isOpen",types:"boolean",required:!0},"Determines if the modal/dialog is open."),l.a.createElement(r.a.Prop,{name:"onClose",types:"() => void",required:!0},"Function that will be called on close events."),l.a.createElement(r.a.Prop,{name:"backdrop",types:"boolean",defaults:"true"},"Determines if the backdrop is shown."),l.a.createElement(r.a.Prop,{name:"closeOnClickOutside",types:"boolean",defaults:"false"},"Controls whether ",l.a.createElement(i.a,null,"onClose")," is called when clicking outside of the modal."),l.a.createElement(r.a.Prop,{name:"closeOnEscKey",types:"boolean",defaults:"true"},"Controls whether ",l.a.createElement(i.a,null,"onClose")," is called when pressing the ESC key."),l.a.createElement(r.a.Prop,{name:"variant",types:["modal","dialog"],defaults:"modal"},"Determines the modal variant."))},u=function(){return l.a.createElement(r.a,null,l.a.createElement(r.a.Prop,{name:"withBorder",types:"boolean",defaults:"false"},"Determines if the actions top border is shown."))},d=function(){return l.a.createElement(r.a,null,l.a.createElement(r.a.Prop,{name:"withBorder",types:"boolean",defaults:"false"},"Determines if the header bottom border is shown."))};n.default=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(a.H0,null,"Modal"),l.a.createElement(a.Text,null,"A modal appears as a layer on top of the primary interface. Modals disrupt users from interacting with the page until they complete a specific task."," ",l.a.createElement(a.Link,{href:"https://design.bigcommerce.com/components/modals",target:"_blank"},"Modals Design Guidelines"),"."),l.a.createElement(s.a,null,'function Example() {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  return (\n    <>\n      <Button onClick={() => setIsOpen(true)}>Open Modal</Button>\n\n      <Modal isOpen={isOpen} onClose={() => setIsOpen(false)} closeOnEscKey={true} closeOnClickOutside={false}>\n        <Modal.Header>Modal Title</Modal.Header>\n\n        <Modal.Body>\n          <Text>\n            Ea tempor sunt amet labore proident dolor proident commodo in exercitation ea nulla sunt pariatur.\n            Nulla sunt ipsum do eu consectetur exercitation occaecat labore aliqua. Aute elit occaecat esse ea\n            fugiat esse. Reprehenderit sunt ea ea mollit commodo tempor amet fugiat.\n          </Text>\n          <Text>\n            Esse ipsum est consectetur nulla aute deserunt. Anim sint nisi consequat officia adipisicing irure.\n            Nulla ea reprehenderit elit eu nostrud sunt veniam dolore ex occaecat qui. Commodo ullamco ut sint\n            dolor quis cillum in et enim culpa esse exercitation ad. Eiusmod adipisicing nisi culpa esse laborum\n            cupidatat ad pariatur proident. Consectetur ex sint ullamco non ex.\n          </Text>\n        </Modal.Body>\n\n        <Modal.Actions>\n          <Button variant="subtle" onClick={() => setIsOpen(false)}>\n            Cancel\n          </Button>\n          <Button onClick={() => setIsOpen(false)}>Apply</Button>\n        </Modal.Actions>\n      </Modal>\n    </>\n  );\n}'),l.a.createElement(a.H1,null,"Dialog"),l.a.createElement(a.Text,null,"Setting the variant prop to ",l.a.createElement(i.a,{primary:!0},"dialog")," results in a simplified version of a Modal. The purpose of a dialog is to act as a safety net for a user attempting a destructive action."," ",l.a.createElement(a.Link,{href:"https://design.bigcommerce.com/components/modals-confirmation",target:"_blank"},"Modals\u2013Confirmation Design Guidelines"),"."),l.a.createElement(s.a,null,'function Example() {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  return (\n    <>\n      <Button onClick={() => setIsOpen(true)}>Open Dialog</Button>\n\n      <Modal\n        isOpen={isOpen}\n        onClose={() => setIsOpen(false)}\n        closeOnEscKey={true}\n        closeOnClickOutside={false}\n        variant="dialog"\n      >\n        <Modal.Header>Dialog Title</Modal.Header>\n\n        <Modal.Body>\n          <Text>\n            Ea tempor sunt amet labore proident dolor proident commodo in exercitation ea nulla sunt pariatur.\n          </Text>\n        </Modal.Body>\n\n        <Modal.Actions>\n          <Button variant="subtle" onClick={() => setIsOpen(false)}>\n            Cancel\n          </Button>\n          <Button onClick={() => setIsOpen(false)}>Apply</Button>\n        </Modal.Actions>\n      </Modal>\n    </>\n  );\n}'),l.a.createElement(a.H1,null,"API"),l.a.createElement(a.H2,null,"Modal"),l.a.createElement(c,null),l.a.createElement(a.H2,null,"Modal.Header"),l.a.createElement(d,null),l.a.createElement(a.H2,null,"Modal.Actions"),l.a.createElement(u,null))}},ftxc:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/Modal/ModalPage",function(){var e=t("KL3r");return{page:e.default||e}}])}},[["ftxc",1,0]]]);