(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{"2Jkj":function(n,o,t){"use strict";t.r(o);var e=t("+Ls6"),r=t("ERkP"),p=t.n(r),a=t("GsAr"),l=t("lIm4"),m=t("nFRM"),d=function(){return p.a.createElement(m.a,null,p.a.createElement(m.a.Prop,{name:"maxHeight",types:"number",defaults:"250"},"Sets the max-height of the dropdown."),p.a.createElement(m.a.Prop,{name:"onItemClick",types:"(value) => void"},"Callback called with value of clicked item."),p.a.createElement(m.a.Prop,{name:"position",types:["auto","auto-end","auto-start","bottom","bottom-end","bottom-start","left","left-end","left-start","right","right-end","right-start","top","top-end","top-start"],defaults:"bottom-start"},"Sets the position of the Dropdown relative to the anchor."),p.a.createElement(m.a.Prop,{name:"trigger",types:"ReactElement",required:!0},"Element used as anchor."))},i=function(){return p.a.createElement(m.a,null,p.a.createElement(m.a.Prop,{name:"value",types:["string","string[]","number"]},"Value of the item"))};o.default=function(){return p.a.createElement(p.a.Fragment,null,p.a.createElement(e.H0,null,"Dropdown"),p.a.createElement(e.Text,null,"Dropdowns are toggleable, contextual overlays for displaying lists."," ",p.a.createElement(e.Link,{href:"https://design.bigcommerce.com/components/dropdown",target:"_blank"},"Dropdown Design Guidelines"),"."),p.a.createElement(a.a,null,'<Dropdown\n  maxHeight={250}\n  onItemClick={value => value}\n  placement="bottom-start"\n  trigger={<Button>Open Menu</Button>}\n>\n  <Dropdown.Item value={1}>Option</Dropdown.Item>\n  <Dropdown.Item value={2}>Option</Dropdown.Item>\n  <Dropdown.Item value={3}>Option</Dropdown.Item>\n  <Dropdown.Item value={4}>Option</Dropdown.Item>\n  <Dropdown.Item value={5}>Option</Dropdown.Item>\n  <Dropdown.Item value={6}>Option</Dropdown.Item>\n  <Dropdown.Item value={7}>Option</Dropdown.Item>\n  <Dropdown.Item value={8}>Option</Dropdown.Item>\n</Dropdown>'),p.a.createElement(e.H1,null,"API"),p.a.createElement(e.H2,null,"Dropdown"),p.a.createElement(d,null),p.a.createElement(e.H2,null,"Dropdown.Item"),p.a.createElement(i,null),p.a.createElement(e.H1,null,"Examples"),p.a.createElement(e.H2,null,"Trigger"),p.a.createElement(e.Text,null,"Dropdown can be anchored to any ",p.a.createElement(l.a,null,"ReactElement"),", including all types of buttons."),p.a.createElement(a.a,null,'<Grid gridColumns="repeat(4, min-content)">\n  <Dropdown trigger={<Button>Button</Button>}>\n    <Dropdown.Item value={1}>Option</Dropdown.Item>\n    <Dropdown.Item value={2}>Option</Dropdown.Item>\n  </Dropdown>\n  <Dropdown trigger={<Button actionType="destructive">Button</Button>}>\n    <Dropdown.Item value={1}>Option</Dropdown.Item>\n    <Dropdown.Item value={2}>Option</Dropdown.Item>\n  </Dropdown>\n  <Dropdown trigger={<Button variant="secondary">Button</Button>}>\n    <Dropdown.Item value={1}>Option</Dropdown.Item>\n    <Dropdown.Item value={2}>Option</Dropdown.Item>\n  </Dropdown>\n  <Dropdown trigger={<Button variant="subtle">Button</Button>}>\n    <Dropdown.Item value={1}>Option</Dropdown.Item>\n    <Dropdown.Item value={2}>Option</Dropdown.Item>\n  </Dropdown>\n</Grid>'),p.a.createElement(e.H2,null,"Position"),p.a.createElement(e.Text,null,"Dropdown can be anchored in different directions with the ",p.a.createElement(l.a,{primary:!0},"position")," property. It will automatically find a position if there's not enough space in the chosen direction."),p.a.createElement(a.a,null,'<Grid gridColumns="repeat(4, min-content)">\n  <Dropdown placement="right" trigger={<Button>Right</Button>}>\n    <Dropdown.Item value={1}>Option</Dropdown.Item>\n    <Dropdown.Item value={2}>Option</Dropdown.Item>\n  </Dropdown>\n  <Dropdown placement="top" trigger={<Button>Top</Button>}>\n    <Dropdown.Item value={1}>Option</Dropdown.Item>\n    <Dropdown.Item value={2}>Option</Dropdown.Item>\n  </Dropdown>\n  <Dropdown placement="bottom-start" trigger={<Button>Bottom-Start</Button>}>\n    <Dropdown.Item value={1}>Option</Dropdown.Item>\n    <Dropdown.Item value={2}>Option</Dropdown.Item>\n  </Dropdown>\n  <Dropdown placement="bottom-end" trigger={<Button>Bottom-End</Button>}>\n    <Dropdown.Item value={1}>Option</Dropdown.Item>\n    <Dropdown.Item value={2}>Option</Dropdown.Item>\n  </Dropdown>\n</Grid>'),p.a.createElement(e.H2,null,"Max Height"),p.a.createElement(e.Text,null,"Once the content is longer than the max-height, the Dropdown will be scrollable. It is possible to modify the dimension by passing a ",p.a.createElement(l.a,{primary:!0},"maxHeight")," property."),p.a.createElement(a.a,null,'<Grid gridColumns="repeat(3, min-content)">\n  <Dropdown trigger={<Button>Default</Button>}>\n    <Dropdown.Item value={1}>Option</Dropdown.Item>\n    <Dropdown.Item value={2}>Option</Dropdown.Item>\n    <Dropdown.Item value={3}>Option</Dropdown.Item>\n    <Dropdown.Item value={4}>Option</Dropdown.Item>\n    <Dropdown.Item value={5}>Option</Dropdown.Item>\n    <Dropdown.Item value={6}>Option</Dropdown.Item>\n    <Dropdown.Item value={7}>Option</Dropdown.Item>\n    <Dropdown.Item value={8}>Option</Dropdown.Item>\n  </Dropdown>\n  <Dropdown maxHeight={150} trigger={<Button>Smaller</Button>}>\n    <Dropdown.Item value={1}>Option</Dropdown.Item>\n    <Dropdown.Item value={2}>Option</Dropdown.Item>\n    <Dropdown.Item value={3}>Option</Dropdown.Item>\n    <Dropdown.Item value={4}>Option</Dropdown.Item>\n    <Dropdown.Item value={5}>Option</Dropdown.Item>\n    <Dropdown.Item value={6}>Option</Dropdown.Item>\n    <Dropdown.Item value={7}>Option</Dropdown.Item>\n    <Dropdown.Item value={8}>Option</Dropdown.Item>\n  </Dropdown>\n  <Dropdown maxHeight={350} trigger={<Button>Longer</Button>}>\n    <Dropdown.Item value={1}>Option</Dropdown.Item>\n    <Dropdown.Item value={2}>Option</Dropdown.Item>\n    <Dropdown.Item value={3}>Option</Dropdown.Item>\n    <Dropdown.Item value={4}>Option</Dropdown.Item>\n    <Dropdown.Item value={5}>Option</Dropdown.Item>\n    <Dropdown.Item value={6}>Option</Dropdown.Item>\n    <Dropdown.Item value={7}>Option</Dropdown.Item>\n    <Dropdown.Item value={8}>Option</Dropdown.Item>\n  </Dropdown>\n</Grid>'),p.a.createElement(e.H2,null,"Dropdown.Item"),p.a.createElement(e.Text,null,"Dropdown expects ",p.a.createElement(l.a,null,"Dropdown.Item")," as children. An item can have optional values."),p.a.createElement(a.a,null,'<Grid gridColumns="repeat(2, min-content)">\n  <Dropdown trigger={<Button>With Values</Button>}>\n    <Dropdown.Item value={1}>Option</Dropdown.Item>\n    <Dropdown.Item value={2}>Option</Dropdown.Item>\n  </Dropdown>\n  <Dropdown trigger={<Button>With Links</Button>}>\n    <Dropdown.Item>\n      <Link>Link</Link>\n    </Dropdown.Item>\n    <Dropdown.Item>\n      <Link>Link</Link>\n    </Dropdown.Item>\n  </Dropdown>\n</Grid>'))}},IlL6:function(n,o,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/Dropdown/DropdownPage",function(){var n=t("2Jkj");return{page:n.default||n}}])}},[["IlL6",1,0]]]);